"use strict";

function Container(id) {
    this.id= id;
    this.htmlCode = '';
}

Container.prototype.render = function() {
    return this.htmlCode;
};

function Good(id, title, price, img) {
    Container.call(this, id);
    this.title = title;
    this.price = price;
    this.img = img;
}

Good.prototype = Object.create(Container.prototype);
Good.prototype.constructor = Good;

Good.prototype.render = function(jsSelector) {
    var selector = document.querySelector(jsSelector);

    var goodContainer = document.createElement('div');
    goodContainer.className = 'product__item';

    var goodContainerCol = document.createElement('div');
    goodContainerCol.className = 'col-item';
    goodContainerCol.appendChild(goodContainer);

    goodContainer.innerHTML = '<div class="add-cart">' +
            '<span class="flex-center spanAddCart" data-id="'+ this.id +'">' +
                '<span class="cart-img"></span><span>Add to Cart</span>' +
            '</span>' +
        '</div>' +
        '<div class="prod-elem">' +
            '<a href="single-page.html" class="link-prod">' +
                '<div class="img-box">' +
                    '<img src="'+ this.img +'" alt="">' +
                    '<div class="port_item_cont flex-center"></div>' +
                '</div>' +
                '<div class="inform-box">' +
                    '<p>'+ this.title +'</p>' +
                    '<span>$'+ this.price +'</span>' +
                '</div>' +
            '</a>' +
        '</div>';

    selector.appendChild(goodContainerCol);
};
function Basket(idBasket) {
    Container.call(this, idBasket);

    this.countGoods = 0;
    this.amount = 0;
    this.basketItems = [];

    this.loadBasketItems();
}

Basket.prototype = Object.create(Container.prototype);
Basket.prototype.constructor = Basket;

Basket.prototype.render = function(root) {
    var basketRoot = document.getElementById(root);

    // Отрисовываем div с заголовком и таблицей в нутри
    var basketDiv = document.createElement('div');
    basketDiv.className = 'basket';

    var basketTitle = document.createElement('div');
    basketTitle.className = 'basket__title';
    basketTitle.innerHTML = '<h3>Basket</h3><a href="shoping-cart.html">Go to the shopping basket</a>';

    basketDiv.appendChild(basketTitle);

    // Отрисовываем таблицу
    var basketTable = document.createElement('table');
    basketTable.innerHTML = '<thead><tr><td class="item-title">Product name</td>' +
        '<td class="item-price">Price</td><td class="item-count">Quantity</td></tr></thead>' +
        '<tbody id="basket_items"></tbody>';

    basketDiv.appendChild(basketTable);
    basketRoot.appendChild(basketDiv);
};

Basket.prototype.loadBasketItems = function() {
    var appendClassItem = document.getElementsByClassName('basket');

    var SBI = showBasketItems.bind(this);

    var xhr = new XMLHttpRequest();
    xhr.open('GET', './json/basket.json', true); //Асинхронный запрос

    xhr.onreadystatechange = function () {
        if (xhr.readyState !== 4) {
            return;
        }

        if(xhr.status === 200){
            SBI(JSON.parse(xhr.responseText));
        } else {
            console.log('Error', xhr.status, xhr.statusText);
        }
    };

    xhr.send();

    function showBasketItems(items) {
        var basketData = document.createElement('div');
        basketData.id = 'basket-data';

        this.countGoods = items.countGoods;
        this.amount = parseFloat(items.amount);


        var countItems = document.querySelector('.basket-img');
        if (this.countGoods !== 0) {
            countItems.innerHTML = '<span class="spanCount">'+ this.countGoods +'</span>';
        }

        var allProducts = document.createElement('p');
        allProducts.innerHTML = 'Total goods: <span>'+ this.countGoods +'</span>';

        var totalAmount = document.createElement('p');
        totalAmount.innerHTML = 'Total amount: <span>'+ Math.abs(this.amount).toFixed(2) +' $</span>';

        basketData.appendChild(allProducts);
        basketData.appendChild(totalAmount);
        appendClassItem[0].appendChild(basketData);

        for (var itemKey in items.basket) {
            if (items.basket.hasOwnProperty(itemKey)) {
                this.basketItems.push(items.basket[itemKey]);
            }
        }

        //Отабразить уже имеющиеся предметы в корзине
        this.release();
    }
};

Basket.prototype.release = function() {
    var basketItemsDiv = document.getElementById('basket_items');
    basketItemsDiv.innerHTML = '';

    for (var i in this.basketItems) {
        if (this.basketItems.hasOwnProperty(i)) {
            var itemList = document.createElement('tr');
            itemList.setAttribute('data-id-item', this.basketItems[i].id_product);

            itemList.innerHTML = '<td class="item-title">' + this.basketItems[i].title + '</td>' +
                '<td class="item-price">'+ this.basketItems[i].price +' $</td>' +
                '<td class="item-count"><span class="minus"> - </span>' +
                    '<span class="count">'+ this.basketItems[i].quantity +'</span>' +
                    '<span class="plus"> + </span></td>' +
                '<td><span class="basket-btn"><i class="fa fa-times-circle"></i></span></td>';

            basketItemsDiv.appendChild(itemList);
        }
    }
};

Basket.prototype.add = function (idProduct, price, title) {
    var basketItem = {
        "id_product": idProduct,
        "title": title,
        "price": price,
        "quantity": 1
    };

    this.countGoods++;
    this.amount += price;

    var i = 0;
    while (i < this.basketItems.length) {
        if (this.basketItems[i].id_product === idProduct) {
            this.basketItems[i].quantity++;

            break;
        } else if (i === this.basketItems.length - 1) {
            this.basketItems.push(basketItem);

            break;
        } else {
            i++;
        }
    }

    if (this.basketItems.length === 0) {
        this.basketItems.push(basketItem);
    }

    this.addItem(idProduct, price, title);
    this.refresh(); //Перерисовываем корзину
};

Basket.prototype.addItem = function(idProduct, price, title) {
    var basketItemsDiv = document.getElementById('basket_items');

    var flag = false;

    for (var i = 0; i < basketItemsDiv.childNodes.length; i++) {

        var getID = basketItemsDiv.childNodes[i].getAttribute('data-id-item');

        if( getID == idProduct){
            flag = true;
            break;
        }
    }

    if (flag === true){
        var findItemById = basketItemsDiv.querySelector('tr[data-id-item="' + idProduct + '"]');
        var parseIntCount = findItemById.querySelector('td.item-count .count');

        parseIntCount.textContent++;
    }

    if (flag === false) {
        var itemList = document.createElement('tr');
        itemList.setAttribute('data-id-item', idProduct);

        itemList.innerHTML = '<td class="item-title">' + title + '</td>' +
            '<td class="item-price">' + price.toFixed(2) +' $</td>' +
            '<td class="item-count"><span class="minus"> - </span><span class="count">1</span>' +
                '<span class="plus"> + </span></td>' +
            '<td><span class="basket-btn"><i class="fa fa-times-circle"></i></span></td>';

        basketItemsDiv.appendChild(itemList);
    }

    console.log(basketItemsDiv.childNodes);
};

Basket.prototype.countPlus = function(idProduct, quantity, price){
    var basketItemsDiv = document.getElementById('basket_items');

    var findItemById = basketItemsDiv.querySelector('tr[data-id-item="' + idProduct + '"]');
    var parseIntCount = findItemById.querySelector('td.item-count .count');

    parseIntCount.textContent = ++quantity;

    this.countGoods++;
    this.amount += price;

    var i = 0;
    while (i < this.basketItems.length) {
        if (this.basketItems[i].id_product === idProduct) {
            this.basketItems[i].quantity++;

            break;
        } else {
            i++;
        }
    }
    console.log(this.basketItems);

    this.refresh(); //Перерисовываем корзину
};

Basket.prototype.countMinus = function(idProduct, quantity, price){
    var basketItemsDiv = document.getElementById('basket_items');

    var findItemById = basketItemsDiv.querySelector('tr[data-id-item="' + idProduct + '"]');
    var parseIntCount = findItemById.querySelector('td.item-count .count');

    if(quantity == 1){
        findItemById.parentNode.removeChild(findItemById);
    }

    if(quantity > 1){
        parseIntCount.textContent = --quantity
    }

    this.countGoods--;
    this.amount -= price;

    var i = 0;
    while (i < this.basketItems.length) {
        if (this.basketItems[i].id_product === idProduct) {
            if (this.basketItems[i].quantity === 1) {
                this.basketItems.splice(i, 1);
            } else {
                this.basketItems[i].quantity--;
            }

            break;
        } else {
            i++;
        }
    }

    console.log(this.basketItems);

    this.refresh();
};

Basket.prototype.remove = function(idProduct, quantity, price) {
    var getAllPriceThisProduct = quantity * price;

    this.countGoods -= quantity;
    this.amount -= getAllPriceThisProduct;

    var i = 0;
    while (i < this.basketItems.length) {
        if (this.basketItems[i].id_product === idProduct) {
            this.basketItems.splice(i, 1);

            break;
        } else {
            i++;
        }
    }

    var basketItemsDiv = document.getElementById('basket_items');

    var findItemById = basketItemsDiv.querySelector('tr[data-id-item="' + idProduct + '"]');
    findItemById.parentNode.removeChild(findItemById);

    console.log(this.basketItems);
    this.refresh();
};

Basket.prototype.refresh = function () {
    var basketData = document.getElementById('basket-data');
    var itemP = basketData.querySelectorAll('p');

    itemP[0].innerHTML = 'Total goods: <span>'+ this.countGoods +'</span>';
    itemP[1].innerHTML = 'Total amount: <span>'+ Math.abs(this.amount).toFixed(2) +' $</span>';

    var countItems = document.querySelector('.basket-img');
    var countItemsChild = countItems.childNodes[0];
    if (this.countGoods !== 0) {
        countItems.innerHTML = '<span class="spanCount">'+ this.countGoods +'</span>';
    } else {
        countItems.removeChild(countItemsChild);
    }
};

function BasketList(idBasket) {
    Basket.call(this, idBasket);

}

BasketList.prototype = Object.create(Basket.prototype);
BasketList.prototype.constructor = BasketList;

BasketList.prototype.loadBasketItems = function() {
    var SBI = showBasketItems.bind(this);

    var xhr = new XMLHttpRequest();
    xhr.open('GET', './json/basket.json', true); //Асинхронный запрос

    xhr.onreadystatechange = function () {
        if (xhr.readyState !== 4) {
            return;
        }

        if(xhr.status === 200){
            SBI(JSON.parse(xhr.responseText));
        } else {
            console.log('Error', xhr.status, xhr.statusText);
        }
    };

    xhr.send();

    function showBasketItems(items) {
        var basketData = document.createElement('div');
        basketData.classList.add('prodItem');

        this.amount = parseFloat(items.amount);

        //var allProducts = document.createElement('p');
        //allProducts.innerHTML = 'Total goods: <span>'+ this.countGoods +'</span>';
        //
        //var totalAmount = document.createElement('p');
        //totalAmount.innerHTML = 'Total amount: <span>'+ Math.abs(this.amount).toFixed(2) +' $</span>';
        //
        //basketData.appendChild(allProducts);
        //basketData.appendChild(totalAmount);
        //appendClassItem[0].appendChild(basketData);
        var subTotal = document.querySelector('.check-info p span');
        subTotal.textContent = this.amount + ' $';

        var grandTotal = document.querySelectorAll('.check-info > span')[1];
        grandTotal.textContent = this.amount + ' $';

        for (var itemKey in items.basket) {
            if (items.basket.hasOwnProperty(itemKey)) {
                this.basketItems.push(items.basket[itemKey]);
            }
        }

        //Отабразить уже имеющиеся предметы в корзине
        this.release();
    }
};

BasketList.prototype.release = function() {
    var basketItemsDiv = document.querySelector('.prodItemList');
    basketItemsDiv.innerHTML = '';

    for (var i in this.basketItems) {
        if (this.basketItems.hasOwnProperty(i)) {
            var itemList = document.createElement('div');
            itemList.classList.add('prodItem');
            itemList.setAttribute('data-id-item', this.basketItems[i].id_product);

            itemList.innerHTML = '<div class="prodItem__col_big">' +
                '<div class="prod-image"><img src="' + this.basketItems[i].img + '" alt=""></div>' +
                '<div class="prod-info">' +
                    '<div class="prod-name"><a href="">' + this.basketItems[i].title + '</a></div>' +
                    '<div class="pord-descr">' +
                        '<ul>' +
                            '<li>Color: <span>Red</span></li>' +
                            '<li>Size: <span>Xll</span></li>' +
                        '</ul>' +
                    '</div>' +
                '</div>' +
            '</div>' +
            '<div class="prodItem__col">' +
                '<span>' + this.basketItems[i].price + '</span>' +
            '</div>' +
            '<div class="prodItem__col">' +
                '<input name="text" type="text" value="' + this.basketItems[i].quantity + '" required>' +
            '</div>' +
            '<div class="prodItem__col">' +
                '<span>Free</span>' +
            '</div>' +
            '<div class="prodItem__col">' +
                '<span>' + (this.basketItems[i].price * this.basketItems[i].quantity).toFixed(2) + '</span>' +
            '</div>' +
            '<div class="prodItem__col prodItem__col_btn">' +
                '<span><i class="fa fa-times-circle" aria-hidden="true"></i></span>' +
            '</div>';

            basketItemsDiv.appendChild(itemList);
        }
    }
};

window.onload = function() {

    // Отрисовка корзины
    var basket = new Basket('basket_window');
    basket.render('basket_window');

    if (document.querySelector('.product-box')) {
        var xhr = new XMLHttpRequest();
        xhr.open('GET', './json/getGoodById.json', true); //Асинхронный запрос

        xhr.onreadystatechange = function () {
            if (xhr.readyState !== 4) {
                return;
            }

            if(xhr.status === 200){
                renderGoods(JSON.parse(xhr.responseText));
            } else {
                console.log('Error', xhr.status, xhr.statusText);
            }
        };

        xhr.send();

        function renderGoods(items) {
            for (var itemGoods in items) {
                if (items.hasOwnProperty(itemGoods)) {
                    new Good(items[itemGoods].product_id, items[itemGoods].product_name, items[itemGoods].product_price, items[itemGoods].product_image).render('.product-box');
                }
            }
        }

        var goodBtn = document.querySelector('.product-box');
        goodBtn.addEventListener('click', function(event) {addGoods(event)});

        // Функция добавления товара по клику
        function addGoods(event) {
            if (!event.target.classList.contains('spanAddCart')) {
                return;
            }

            var idProduct = parseInt(event.target.getAttribute('data-id'));
            var price = parseFloat(event.target.parentNode.parentNode.querySelector('.inform-box span')
                .textContent.replace(/[^0-9\.]/g, ""));
            var title = event.target.parentNode.parentNode.querySelector('.inform-box p').textContent;
            basket.add(idProduct, price, title);
            console.log(basket.basketItems);
        }
    }

    // Объявление обработчика событий по клику для кнопки в карзине
    var basketBtn = document.querySelector('.basket');
    basketBtn.addEventListener('click', function(event) {changeBasket(event)});

    // Функция добавления/убавления кол-во товара на 1, по клику или же полное его удаление
    function changeBasket(event) {
        if (event.target.tagName === 'SPAN' || event.target.tagName === 'BUTTON') {
            var getID = parseInt(event.target.parentNode.parentNode.getAttribute('data-id-item'));
            var quantity = parseInt(event.target.parentNode.parentNode.querySelector('td.item-count .count').textContent);
            var price = parseFloat(event.target.parentNode.parentNode.querySelector('.item-price').textContent);

            if (event.target.classList.contains('basket-btn')) {
                basket.remove(getID, quantity, price);
            } else if (event.target.classList.contains('minus')) {
                basket.countMinus(getID, quantity, price);
            } else if (event.target.classList.contains('plus')) {
                basket.countPlus(getID, quantity, price);
            }
        } else {
            return;
        }
    }

    var basketWindow = document.getElementById('basket_window');

    //document.body.addEventListener('click', function() {
    //    if (!basketWindow.classList.contains('none')) {
    //        basketWindow.classList.toggle('none');
    //    }
    //});

    document.querySelector('.basket-img').addEventListener('click', function(event) {
        if (basketWindow.classList.contains('none') || !event.target) {
            basketWindow.classList.toggle('none')
        } else {
            basketWindow.classList.toggle('none');
        }
    });

    document.addEventListener('click', function(event) {
        console.log(event.target.className);
    });

    if (document.querySelector('.product-details')) {
        var bssketList = new BasketList('product-details');
    }

};